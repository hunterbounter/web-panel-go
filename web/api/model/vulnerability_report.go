package model

import "hunterbounter.com/web-panel/pkg/database"

func GetZapReportList() []map[string]interface{} {

	var vulnerabilitySql = `
	select * from zap_scan_results t 
	
	order by t.url,t.risk  asc
`

	dbRecords, err := database.ExecuteSql(vulnerabilitySql)
	if err != nil {
		return nil
	}
	return dbRecords

}
func GetOpenVasReportList() []map[string]interface{} {

	var vulnerabilitySql = `
		select
		    	id as db_id,
	t1.nvt_name as name, 
	case
		when t1.hostname = '' then t1.ip
		when t1.ip = '' then t1.hostname
		else 
		t1.ip ||' - '||t1.hostname
	end as url,
	t1.severity as risk,
	'openvas' as agent_type
from
	openvas_scan_result t1
	order by t1.severity desc 
`

	dbRecords, err := database.ExecuteSql(vulnerabilitySql)
	if err != nil {
		return nil
	}
	return dbRecords

}

func GetZapVulnerabilityById(id string) []map[string]interface{} {
	var vulnerabilitySql = `
	select * from zap_scan_results t where t.id =  ` + id + `
	order by t.url,t.risk  asc
`
	dbRecords, err := database.ExecuteSql(vulnerabilitySql)
	if err != nil {
		return nil
	}
	return dbRecords
}

func GetOpenVASVulnerabilityById(id string) []map[string]interface{} {
	var vulnerabilitySql = `
	select * from openvas_scan_result t where t.id =  ` + id + `
	 
`
	dbRecords, err := database.ExecuteSql(vulnerabilitySql)
	if err != nil {
		return nil
	}
	return dbRecords
}
